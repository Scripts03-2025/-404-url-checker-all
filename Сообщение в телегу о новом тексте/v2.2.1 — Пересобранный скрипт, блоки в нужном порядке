/**
 * üì® Telegram Notification Script
 * ------------------------------------
 * üìõ –í–µ—Ä—Å–∏—è: v2.2.1 ‚Äî –ü–µ—Ä–µ—Å–æ–±—Ä–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, –±–ª–æ–∫–∏ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
 *
 * ‚ñ™ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∫–ª–∞–¥–∫—É "404 (–Ω–µ –º–µ–Ω—è—Ç—å!)" –Ω–∞—á–∏–Ω–∞—è —Å 7-–π —Å—Ç—Ä–æ–∫–∏.
 * ‚ñ™ –ï—Å–ª–∏ –≤ –∫–æ–ª–æ–Ω–∫–µ B –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ (http) –∏ –∫–æ–ª–æ–Ω–∫–∞ C –ø—É—Å—Ç–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
 * ‚ñ™ –î–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ:
 *    ‚Äî —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–∫—Å—Ç (B)
 *    ‚Äî –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∞–≤—Ç–æ—Ä–∞ (F)
 *    ‚Äî —Å—Å—ã–ª–∫—É –Ω–∞ TopVisor (G, –µ—Å–ª–∏ –µ—Å—Ç—å)
 *    ‚Äî –±–ª–æ–∫ —Å –ø–æ–∑–∏—Ü–∏—è–º–∏ (H‚ÄìM), –≥–¥–µ –ø—É—Å—Ç—ã–µ/–Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ x
 * ‚ñ™ –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:
 *    üî• New text:
 *    üìä –ü–æ–∑–∏—Ü–∏–∏:
 *    üîé TopVisor:
 *    üë§ –ö—Ç–æ —Ä–∞–∑–º–µ—Å—Ç–∏–ª:
 * ‚ñ™ –°—Ç–∞–≤–∏—Ç –æ—Ç–º–µ—Ç–∫—É –≤ –∫–æ–ª–æ–Ω–∫–µ C ‚Äî "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ <–¥–∞—Ç–∞ –≤—Ä–µ–º—è>"
 * ‚ñ™ –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ –≤–æ –≤–∫–ª–∞–¥–∫—É "–õ–æ–≥ —Å–∫—Ä–∏–ø—Ç–æ–≤" –æ—Ç —Å—Ç—Ä–æ–∫–∏ 7, —Å—Ç–æ–ª–±—Ü—ã M‚ÄìQ
 *
 * üí¨ –°–¥–µ–ª–∞–Ω–æ –≤ ChatGPT: https://chatgpt.com/c/67e2e09a-1b20-8010-8992-ecfebfcfe5c0
 */

const TELEGRAM_TOKEN = '8136586676:AAHvXeM4ih9ECPdSwzGM5P0O1p2_GYb_iTk';
const TELEGRAM_CHAT_ID = '8003377702';

function checkNewLinksAndNotify() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('404 (–Ω–µ –º–µ–Ω—è—Ç—å!)');
  const data = sheet.getRange(7, 1, sheet.getLastRow() - 6, 70).getValues();

  let processedCount = 0;
  let errors = [];

  for (let i = 0; i < data.length; i++) {
    const url = data[i][1];
    const status = data[i][2];
    const author = data[i][5];
    const topvisor = data[i][6];

    if (typeof url !== 'string' || !url.includes('http') || status) continue;

    const authorInitial = author ? author.trim().charAt(0).toUpperCase() + '.' : '–ù–µ —É–∫–∞–∑–∞–Ω';

    let message = `*üî• New text:*
\`${url}\``;

    const metrics = [
      { label: '–∫–ª—é—á –≤ —Ç–æ–ø-10 –Ø (–í–ß)', value: data[i][7] },
      { label: '–∫–ª—é—á –≤ —Ç–æ–ø-3 –Ø', value: data[i][8] },
      { label: '–∫–ª—é—á –≤ —Ç–æ–ø-10 –Ø', value: data[i][9] },
      { label: '–∫–ª—é—á–µ–π –≤ —Ç–æ–ø-3 G', value: data[i][10] },
      { label: '–∫–ª—é—á–µ–π –≤ —Ç–æ–ø-10 G', value: data[i][11] },
      { label: '–≤—Å–µ–≥–æ –∫–ª—é—á–µ–π', value: data[i][12] },
    ];

    const filled = metrics.map(m => {
      const isNumeric = !isNaN(m.value) && m.value !== '' && m.value !== null;
      return { label: m.label, value: isNumeric && Number(m.value) > 0 ? m.value : 'x' };
    });

    message += `\n\n*üìä –ü–æ–∑–∏—Ü–∏–∏:*`;
    filled.forEach((m, index) => {
      message += `\n‚Ä¢ ${m.value} ‚Äî ${m.label}`;
      if (index === 2 || index === 4) message += `\n`;
    });

    if (topvisor && typeof topvisor === 'string' && topvisor.includes('http')) {
      message += `\n\n*üîé TopVisor:* ${topvisor}`;
    }

    message += `\n\n*üë§ –ö—Ç–æ —Ä–∞–∑–º–µ—Å—Ç–∏–ª:* ${authorInitial}`;

    const result = sendTelegramMessage(message);

    const now = new Date();
    const formatted = Utilities.formatDate(now, Session.getScriptTimeZone(), 'dd.MM.yyyy HH:mm');
    const statusMessage = `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${formatted}`;

    if (result.success) {
    sheet.getRange(i + 7, 3).setValue(statusMessage);
    processedCount++;
  } else {
    const errorLog = `‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ ${i + 7}: ${url}
–ü—Ä–∏—á–∏–Ω–∞: ${result.error}`;
    Logger.log(errorLog);
    errors.push(result.error);
  }
  }

  logScriptRun(processedCount, errors);
}

function sendTelegramMessage(message) {
  const url = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;
  const payload = {
    chat_id: TELEGRAM_CHAT_ID,
    text: message,
    parse_mode: 'Markdown',
  };

  const options = {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify(payload),
    muteHttpExceptions: true,
  };

  try {
    const response = UrlFetchApp.fetch(url, options);
    const code = response.getResponseCode();
    return code >= 200 && code < 300
      ? { success: true }
      : { success: false, error: `–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ Telegram: ${code}` };
  } catch (e) {
    return { success: false, error: e.message };
  }
}

function logScriptRun(count, errors) {
  const logSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('–õ–æ–≥ —Å–∫—Ä–∏–ø—Ç–æ–≤');
  const now = new Date();
  const date = Utilities.formatDate(now, Session.getScriptTimeZone(), 'dd.MM.yyyy');
  const time = Utilities.formatDate(now, Session.getScriptTimeZone(), 'HH:mm:ss');

  const row = [[
    date,
    time,
    errors.length ? '‚ö†Ô∏è –° –æ—à–∏–±–∫–∞–º–∏' : '‚úÖ –£—Å–ø–µ—à–Ω–æ',
    count ? `üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${count}` : 'üì≠ –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫',
    errors.join('; ')
  ]];

  const last = logSheet.getLastRow();
  if (last >= 7) {
    logSheet.insertRowBefore(7);
  }
  logSheet.getRange(7, 13, 1, row[0].length).setValues(row);
}

function setupTrigger() {
  ScriptApp.newTrigger('checkNewLinksAndNotify').timeBased().everyHours(4).create();
}
